{"uid":"69c08aac0d0cb9c1","name":"test_list_task","fullName":"test.test_gyakorlás1.TestHootel#test_list_task","historyId":"0ff650ef6c28e31497938e4c7a9ea66b","time":{"start":1705226427360,"stop":1705226430467,"duration":3107},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h4[text()=\"West City Apartments Budapest - hostel\"]\"}\n  (Session info: chrome-headless-shell=120.0.6099.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x5611218e7f83 <unknown>\n#1 0x5611215a0cf7 <unknown>\n#2 0x5611215f099e <unknown>\n#3 0x5611215f0aa1 <unknown>\n#4 0x56112163bd64 <unknown>\n#5 0x56112161a0dd <unknown>\n#6 0x561121639006 <unknown>\n#7 0x561121619e53 <unknown>\n#8 0x5611215e1dd4 <unknown>\n#9 0x5611215e31de <unknown>\n#10 0x5611218ac531 <unknown>\n#11 0x5611218b0455 <unknown>\n#12 0x561121898f55 <unknown>\n#13 0x5611218b10ef <unknown>\n#14 0x56112187c99f <unknown>\n#15 0x5611218d5008 <unknown>\n#16 0x5611218d51d7 <unknown>\n#17 0x5611218e7124 <unknown>\n#18 0x7fb4ba694ac3 <unknown>","statusTrace":"self = <test_gyakorlás1.TestHootel object at 0x7f4e20eb24d0>\n\n    def test_list_task(self):\n        lista = self.driver.find_element(By.XPATH,\n                                         '/html/body/app-root/div/app-home/div/div/div[2]/div/form/div[3]/button[2]')\n        lista.click()\n        time.sleep(2)\n    \n        nav = self.driver.find_element(By.XPATH, '//a[text()=\"3\"]')\n        nav.click()\n    \n        time.sleep(1)\n    \n>       west_city = self.driver.find_element(By.XPATH, '//h4[text()=\"West City Apartments Budapest - hostel\"]')\n\ntest/test_gyakorlás1.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:742: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4e20d89570>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x5611218d51d7 \\\\u003Cunknown>\\\\n#17 0x5611218e7124 \\\\u003Cunknown>\\\\n#18 0x7fb4ba694ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h4[text()=\"West City Apartments Budapest - hostel\"]\"}\nE         (Session info: chrome-headless-shell=120.0.6099.199); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       #0 0x5611218e7f83 <unknown>\nE       #1 0x5611215a0cf7 <unknown>\nE       #2 0x5611215f099e <unknown>\nE       #3 0x5611215f0aa1 <unknown>\nE       #4 0x56112163bd64 <unknown>\nE       #5 0x56112161a0dd <unknown>\nE       #6 0x561121639006 <unknown>\nE       #7 0x561121619e53 <unknown>\nE       #8 0x5611215e1dd4 <unknown>\nE       #9 0x5611215e31de <unknown>\nE       #10 0x5611218ac531 <unknown>\nE       #11 0x5611218b0455 <unknown>\nE       #12 0x561121898f55 <unknown>\nE       #13 0x5611218b10ef <unknown>\nE       #14 0x56112187c99f <unknown>\nE       #15 0x5611218d5008 <unknown>\nE       #16 0x5611218d51d7 <unknown>\nE       #17 0x5611218e7124 <unknown>\nE       #18 0x7fb4ba694ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestHootel","time":{"start":1705226424420,"stop":1705226427359,"duration":2939},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestHootel::0","time":{"start":1705226430488,"stop":1705226430546,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_gyakorlás1"},{"name":"subSuite","value":"TestHootel"},{"name":"host","value":"fv-az1426-122"},{"name":"thread","value":"2193-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_gyakorlás1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"69c08aac0d0cb9c1.json","parameterValues":[]}